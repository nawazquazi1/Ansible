# Check Ansible Version
ansible --version # Check Ansible version

# Ping a Host
ansible -i inventory -m ping web01 # Check connectivity to web01

# Ping All Hosts
ansible -i inventory -m ping all # Check connectivity to all hosts
ansible -i inventory -m ping '*' # Check connectivity to all hosts

# Ping Host Groups
ansible -i inventory -m ping websrvgrp # Check connectivity to websrvgrp
ansible -i inventory -m ping dbsrvgrp # Check connectivity to dbsrvgrp
ansible -i inventory -m ping dc_ohio # Check connectivity to dc_ohio

# Run a Command on Hosts
ansible all -m command -a "uptime" -i inventory # Execute 'uptime' command on all hosts

# Run a Playbook
ansible-playbook playbook.yml -i inventory # Execute the playbook on specified hosts

# Check Playbook Syntax
ansible-playbook playbook.yml --syntax-check # Validate playbook syntax without execution

# List Hosts
ansible-inventory -i inventory --list # List all hosts and their details from the inventory

# Display Configuration
ansible-config view # Show current Ansible configuration

# Display Inventory
ansible-inventory -i inventory --graph # Show graphical representation of the inventory

# Test Connectivity
ansible all -m ping -i inventory -vvvv # Check connectivity with verbose output

# Run a Module
ansible all -m <module_name> -a "<module_arguments>" -i inventory # Execute a module with arguments

# Install a Package
ansible -i inventory -m yum -a "name=httpd state=present" web01 # Install httpd package on web01

# Install a Package with Elevated Privileges
ansible -i inventory -m yum -a "name=httpd state=present" web01 --become # Install httpd package with sudo on web01

# Start and Enable a Service
ansible -i inventory -m service -a "name=httpd state=started enabled=yes" web01 --become # Start and enable httpd service on web01

# Copy a File
ansible -i inventory -m copy -a "src=index.html dest=/var/www/html/index.html" web01 --become # Copy index.html to web01

# Encrypt a File
ansible-vault encrypt file.yml # Encrypt a file using Ansible Vault

# Decrypt a File
ansible-vault decrypt file.yml # Decrypt an encrypted file

# Edit an Encrypted File
ansible-vault edit file.yml # Edit an encrypted file

# Encrypt a String
ansible-vault encrypt_string 'secret' --name 'my_secret' # Encrypt a string for use in a playbook

# Init a Role
ansible-galaxy init role_name # Create directory structure for a new role

# Install Roles
ansible-galaxy install -r requirements.yml # Install roles from Ansible Galaxy

# Run Playbook with Tags
ansible-playbook playbook.yml -i inventory --tags "tag_name" # Run specific tags within a playbook

# Skip Tags in Playbook
ansible-playbook playbook.yml -i inventory --skip-tags "tag_name" # Skip specific tags in a playbook
